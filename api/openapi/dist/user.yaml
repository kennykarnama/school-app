openapi: 3.0.0
info:
  version: 1.0.0
  title: School APP - Academic Year Management
  license:
    name: MIT
servers:
  - url: http://localhost:8080
security:
  - bearerAuth: []
paths:
  /users:
    post:
      summary: Register a new user
      operationId: registerUser
      tags:
        - registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserReq'
      responses:
        '201':
          description: Location successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/login:
    post:
      summary: Login using credentials
      operationId: authenticateUser
      tags:
        - authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReq'
      responses:
        '201':
          description: Location successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResp'
        default:
          description: unexpected errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
    RegisterUserReq:
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        password_confirmation:
          type: string
          format: password
    LoginReq:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    LoginResp:
      type: object
      properties:
        token:
          type: string
    ErrorResponse:
      type: object
      properties:
        httpCode:
          type: integer
          description: http status error code
        errorCode:
          type: string
          description: error code
        errorMessage:
          type: string
          description: error message
